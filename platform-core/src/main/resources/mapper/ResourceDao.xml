<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jwzhu.platform.core.permission.db.ResourceDao">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into Resource (`code`, parentCode, `name`, url, sort, type, menuShow, resourceStatus, createTime)
        values (#{code}, #{parentCode}, #{name}, #{url}, #{sort}, #{type}, #{menuShow}, #{resourceStatus}, #{createTime})
    </insert>
    <update id="updateById">
        update Resource
        <set>
            <trim suffixOverrides=",">
                <if test="name != null">
                    `name` = #{name},
                </if>
                <if test="url != null">
                    url = #{url},
                </if>
                <if test="sort != null">
                    sort = #{sort},
                </if>
                <if test="type != null">
                    type = #{type},
                </if>
                <if test="menuShow != null">
                    menuShow = #{menuShow},
                </if>
                <if test="resourceStatus != null">
                    resourceStatus = #{resourceStatus},
                </if>
                <if test="updateTime != null">
                    updateTime = #{updateTime},
                </if>
            </trim>
        </set>
        where id = #{id}
    </update>
    <update id="updateStatus">
        update Resource
        set resourceStatus = #{newStatus},
            updateTime = #{updateTime}
        where id = #{id} and resourceStatus = #{oldStatus}
    </update>
    <select id="queryByParam" resultType="com.jwzhu.platform.core.permission.model.ResourceList">
        select id, `code`, parentCode, `name`, sort, type, menuShow, resourceStatus
        from Resource
        <where>
            <trim suffixOverrides="and">
                <if test="key != null">
                    (`code` like concat('%', #{key},'%') or parentCode like concat('%', #{key},'%') or `name` like concat('%', #{key},'%')) and
                </if>
                <if test="type != null">
                    type = #{type} and
                </if>
                <if test="menuShow != null">
                    menuShow = #{menuShow} and
                </if>
                <if test="resourceStatus != null">
                    resourceStatus = #{resourceStatus} and
                </if>
            </trim>
        </where>
        order by
        <trim suffixOverrides=",">
            <if test="sorts != null and sorts.size() > 0">
                <foreach collection="sorts" item="item">
                    ${item.columnName} ${item.sortType},
                </foreach>
            </if>
            id desc,
        </trim>
    </select>
    <select id="queryMenu" resultType="com.jwzhu.platform.core.permission.model.Menu">
        select r.`code`, r.parentCode, r.`name`, r.url, r.type, r.sort
        from Resource r
        <if test="selfId != null">
            right join (select distinct rr.resourceCode
            from RoleResource rr
            right join AdminRole ar on ar.roleCode = rr.roleCode
            right join Role on Role.code = ar.roleCode
            where ar.adminId = #{selfId} and Role.roleStatus = #{enableStatusCode}
            ) t on t.resourceCode = r.code
        </if>
        <where>
            <trim suffixOverrides="and">
                r.resourceStatus = #{enableStatusCode} and
                <if test="types != null and types.length > 0">
                    r.type in
                    <foreach collection="types" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    and
                </if>
                <if test="menuShow != null">
                    r.menuShow = #{menuShow} and
                </if>
            </trim>
        </where>
        order by r.`sort` desc, r.id
    </select>
    <select id="getById" resultType="com.jwzhu.platform.core.permission.model.Resource">
        select id, `code`, parentCode, `name`, url, sort, type, menuShow, createTime, updateTime, resourceStatus
        from Resource
        where id = #{id}
    </select>
    <select id="getByCode" resultType="com.jwzhu.platform.core.permission.model.Resource">
        select id, `code`, parentCode, `name`, url, sort, type, menuShow, createTime, updateTime, resourceStatus
        from Resource
        where `code` = #{code} for
        update
    </select>
    <select id="getByUrl" resultType="com.jwzhu.platform.core.permission.model.Resource">
        select id, `code`, parentCode, `name`, url, sort, type, menuShow, createTime, updateTime, resourceStatus
        from Resource
        where `url` = #{url} for
        update
    </select>
    <select id="queryRoleResource" resultType="com.jwzhu.platform.core.permission.model.ResourcePermission">
        select r.`code`, r.parentCode, r.`name`, r.type
        from Resource r
        <if test="selfId != null">
            right join (select distinct rr.resourceCode
            from RoleResource rr
            right join AdminRole ar on ar.roleCode = rr.roleCode
            right join Role on Role.code = ar.roleCode
            where ar.adminId = #{selfId} and Role.roleStatus = #{enableStatusCode}
            ) t on t.resourceCode = r.code
        </if>
        where r.resourceStatus = #{enableStatusCode}
    </select>
    <select id="queryAllResourceByRoleCode" resultType="java.lang.String">
        select resourceCode
        from RoleResource
        where roleCode = #{roleCode}
    </select>
    <select id="queryMyResourceUrl" resultType="java.lang.String">
        select r.url
        from Resource r
        <if test="selfId != null">
            right join (select distinct rr.resourceCode
            from RoleResource rr
            right join AdminRole ar on ar.roleCode = rr.roleCode
            right join Role on Role.code = ar.roleCode
            where ar.adminId = #{selfId} and Role.roleStatus = #{enableStatusCode}
            ) t on t.resourceCode = r.code
        </if>
        where r.resourceStatus = #{enableStatusCode} and r.url is not null
        order by r.url
    </select>
</mapper>